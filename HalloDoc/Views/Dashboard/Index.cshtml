@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@using Microsoft.AspNetCore.Http
@using static HalloDoc.Entity.Models.Constant;
@using HalloDoc.Entity.Models.ViewModel;
@model PaginatedViewModel<PatientDashList>;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Dashboard";
}
<div class="tabcontent defaulttab py-4 mx-5 ">
    <h2 class="py-4"><b>Medical History </b></h2>
    <div class="reqform">
        <div class=" d-flex justify-content-end bg-white ">
            <button type="button" class="btn btn-outline-info rounded p-2 m-4 dNone" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                Create New Request
            </button>
            <button type="button" class="btn btn-outline-info rounded p-2 m-4 dBlock" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                +
            </button>
            <!-- Modal -->
            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered ">
                    <div class="modal-content">
                        <div class="modal-header bg-info">
                            <h5 class="modal-title text-white bg-info" id="staticBackdropLabel"> Create New Request</h5>
                            <button type="button" class="btn-close " data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div>
                                Here, I want to Create new request for...
                            </div>
                            <button id="me" type="button" class="btn btn-outline-info">Me</button>
                            <button id="else" type="button" class="btn btn-outline-info">Some One Else</button>
                        </div>
                        <div class="modal-footer">
                            <button id="cont" type="button" class="btn btn-outline-info">Continue</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive dNone">
            <table class="table table-responsive p-3">
                <thead class="bg-light">
                    <tr>
                        <th scope="col" width="25%">Created Date <span class="sortbtn" data-value="CreatedDate"><i class="fa fa-sort"></i></span></th>
                        <th scope="col" width="55%">Current Status <span class="sortbtn" data-value="Status"><i class="fa fa-sort"></i></span></th>
                        <th scope="col">Document</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider mx-5 bg-white " id="history">
                    @if (Model != null)
                    {
                        @foreach (var item in Model.AdminList)
                        {
                            <tr>
                                <td scope="row"> @item.createdDate</td>
                                <td>@item.Status</td>
                                <td>
                                    <a onclick="location.href='@Url.Action("UploadDocument", "Dashboard",new {RequestId=item.RequestId >0  ?item.RequestId : 0 })'" class="btn btn-outline-info btn-sm">
                                        Documents (@item.Fcount)
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="dBlock">
            <div class="accordion" id="accordionExample">
                @foreach (var item in Model.AdminList)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="flush-heading-@item.RequestId">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-@item.RequestId" aria-expanded="true" aria-controls="collapseOne">
                                <i class="fa fa-clock text-info me-2"></i>
                                <b>Created Date :  </b>
                                @item.createdDate.ToString("MMM d, yyyy")
                            </button>
                        </h2>
                        <div id="flush-@item.RequestId" class="accordion-collapse collapse" aria-labelledby="flush-heading-@item.RequestId" data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <div class="mb-1">
                                    <i class="fa-solid fa-user text-info border border-info rounded-circle"></i>
                                    <b> Provider : </b>
                                </div>

                                <div class="mb-1">
                                    <i class="fa fa-check text-info border border-info rounded-circle"></i>
                                    <b> Current Status : </b>
                                    @item.Status
                                </div>
                                <div>
                                    @{
                                        if (@item.Fcount != null)
                                        {
                                            <a asp-action="UploadDocument" asp-controller="Dashboard" asp-route-id="@item.RequestId" class="btn btn-outline-info btn-sm">
                                                Documents
                                                <i class="fa-solid fa-download"></i>
                                            </a>

                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <nav aria-label="Page navigation example">
        <ul class="pagination pagination-container d-flex justify-content-center">
            @{
                int i;

                if (Model.CurrentPage > 1)
                {
                    <li class="page-item"><a class="page-link" data-page="@(Model.CurrentPage - 1)">&lt;</a></li>
                }
                else
                {
                    <li class="page-item disabled"><a class="page-link">&lt;</a></li>
                }
                @for (i = 1; i <= Model.TotalPages; i++)
                {

                    <li class="page-item"><a href="#" data-page="@i" class="@(i == Model.CurrentPage ? "active" : "") page-link">@i</a></li>
                }
                if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item"><a class="page-link" data-page="@(Model.CurrentPage + 1)">&gt;</a></li>
                }
                else
                {
                    <li class="page-item disabled"><a class="page-link">&gt;</a></li>
                }
            }
        </ul>
    </nav>
</div>
<script>
    var pageglobal = 1;
    var sortOrderglobal = false;
    var sortColumnglobal = "createdDate";
    var reqtypeElements = document.getElementsByClassName('sortbtn');
    for (var i = 0; i < reqtypeElements.length; i++) {
        reqtypeElements[i].addEventListener('click', sort);
    }
    $(".pagination-container a").on("click", function (e) {
        e.preventDefault();
        console.log("hhhh");
        var page = $(this).data('page');
        pageglobal = page;
        console.log(sortOrderglobal);
        console.log(sortColumnglobal);


        $.ajax({
            url: "@Url.Action("Index", "Dashboard")",
            type: "GET",
            data: {
                page: page,
                sortColumn: sortColumnglobal,
                sortOrder: sortOrderglobal,
            },
            success: function (data) {
                var bodyContent = $(data).find('tbody').html();
                var page = $(data).find('.pagenav').html();
                $('#pagination').html(page);
                $("#history").html(bodyContent);
                console.log("AJAX success");
            },
            error: function (error) {
                console.error("Error:", error);
            }
        });
    });
    function sort() {
        console.log("etfh");
        var e = $(this).data("value");
        var sortOrder = sortOrderglobal;
        var sortColumn = e;
        var page = pageglobal;

        debugger;
        if (e == sortColumnglobal) {
            if (sortOrder == true) {
                sortOrderglobal = false;
            }
            else {
                sortOrderglobal = true;
            }
        }
        else {
            sortColumnglobal = e;
            if (sortOrder == true) {
                sortOrderglobal = false;
            }
            else {
                sortOrderglobal = true;
            }
        }

        console.log(sortOrderglobal);
        console.log(sortColumnglobal);
        $.ajax({
            type: "GET",
            url: '@Url.Action("Index", "Dashboard")',
            data: {
                page: page,
                sortColumn: sortColumnglobal,
                sortOrder: sortOrderglobal,
            },
            success: function (data) {
                console.log(data);
                var bodyContent = $(data).find('tbody').html();
                var page = $(data).find('.pagenav').html();
                $('#pagination').html(page);
                $("#history").html(bodyContent);
                console.log("AJAX success");
            },
            error: function (error) {
                console.log("Error:", error);
            }
        });
    }
</script>

