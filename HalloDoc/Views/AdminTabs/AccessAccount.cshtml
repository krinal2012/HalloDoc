@{
    Layout = "_AdminDashboardLayout";
    ViewData["Title"] = "Account Access";
}
@using HalloDoc.Entity.Models.ViewModel;
@using HalloDoc.Entity.DataModels;
@using static HalloDoc.Entity.Models.Constant;
@model PaginatedViewModel<Role>;

<div class="d-flex justify-content-between align-items-center container pb-1 mt-5">
    <div class="d-flex align-self-center">
        <h3><b>Account Access</b></h3>
    </div>
</div>
<div class="bg-white reqform container p-3">
    <div class="d-flex justify-content-end align-items-center ">
        <a class="btn btn-info" asp-controller="AdminTabs" asp-action="CreateRole">Create Acccess</a>
    </div>
    <table class="table table-responsive my-2">
        <thead>
            <tr class="table-secondary">
                <th>Name</th>
                <th>Account Type</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>

        <tbody id="rolebody">
            @foreach (var item in Model.AdminList)
            {
                <tr>
                    <td class="table-text">@item.Name</td>
                    <td class="table-text"> @Enum.GetName(typeof(AccountType),item.AccountType)</td>
                    <td class="text-center">
                        <a class="btn btn-sm  btn-outline-info" asp-action="EditRole" asp-controller="AdminTabs" asp-route-roleid="@item.RoleId">
                            Edit
                        </a>
                        <a class="btn btn-sm  btn-outline-info deleterolebutton" data-roleid="@item.RoleId">
                            Delete
                        </a>
                    </td>
                </tr>

            }
        </tbody>
    </table>
    <input type="hidden" asp-for="CurrentPage" id="CurrentPage" />
    <nav aria-label="Page navigation example" class="pagenav">
        <ul class="pagination pagination-container d-flex justify-content-center" id="pagination">
            @{
                int i;

                if (Model.CurrentPage > 1)
                {
                    <li class="page-item"><a class="page-link" data-page="@(Model.CurrentPage - 1)">&lt;</a></li>
                }
                else
                {
                    <li class="page-item disabled"><a class="page-link">&lt;</a></li>
                }
                @for (i = 1; i <= Model.TotalPages; i++)
                {

                    <li class="page-item"><a data-page="@i" class="@(i == Model.CurrentPage ? "active" : "") page-link">@i</a></li>
                }
                if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item"><a class="page-link" data-page="@(Model.CurrentPage + 1)">&gt;</a></li>
                }
                else
                {
                    <li class="page-item disabled"><a class="page-link">&gt;</a></li>
                }
            }
        </ul>
    </nav>
</div>


<script>
    $('.deleterolebutton').on('click', function () {
        var RoleId = $(this).data("roleid");
        console.log(RoleId);
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-info m-2 shadow-none text-white",
                cancelButton: "btn btn-outline-info m-2"
            },
            buttonsStyling: false
        });

        swalWithBootstrapButtons.fire({
            title: "Are you sure you want to delete this Role?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Delete",
            cancelButtonText: "Cancel",
        }).then((result) => {
            if (result.isConfirmed) {
                console.log("Success");
                $.ajax({
                    method: "POST",
                    url: "/AdminTabs/DeleteRole?RoleId=" + RoleId,
                    success: function (result) {
                        console.log(result);
                        location.reload();
                    },

                    error: function () {
                        console.log("error");
                    }
                });
            }

        });
    });

       $(document).on('click', '.page-link', function (event) {
        var page = $(this).data('page');
        console.log(page);
        $('#CurrentPage').val(page);
        $.ajax({
            type: "GET",
            url: '@Url.Action("AccessAccount", "AdminTabs")',
            data: { page: page },
            success: function (data) {
                console.log("AJAX success");
                var bodyContent = $(data).find('tbody').html();
                $('#rolebody').html(bodyContent);
                var page = $(data).find('.pagenav').html();
                $('#pagination').html(page);
            },
            error: function (error) {
                console.log("Error:", error);
            }
        });

    });
</script>

